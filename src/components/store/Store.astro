<div id="store"></div>

<style lang="scss">
    #store {
        columns: 16rem auto;
        column-gap: 1rem;
    }
</style>

<style lang="scss" is:global>
    .store-item {
        position: relative;
        display: flex;
        flex-direction: column;
        color: var(--text);
        text-decoration: none;
        border: 1px solid var(--variant);
        padding: 0.5rem;
        border-radius: 1rem;
        width: 100%;
        margin-bottom: 1rem;
        break-inside: avoid;
        background-color: var(--item-bg);
        cursor: pointer;

        &::before {
            content: "";
            position: absolute;
            z-index: -1;
            transition: all 0.25s;
            background: var(--gradient);
            inset: 0.5rem;
        }

        &:hover::before {
            inset: -0.125rem;
            filter: var(--filter);
        }

        img {
            border-radius: 0.75rem;
        }

        p {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
</style>

<style lang="scss" is:global>
    .wrapper {
        display: none;
        position: absolute;
        z-index: 2;

        &::before {
            content: "";
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 100vw;
            backdrop-filter: blur(1rem);
        }

        .popup {
            position: fixed;
            display: flex;
            border: 1px solid var(--variant);
            border-radius: 1rem;
            gap: 1rem;
            padding: 1rem;
            background-color: var(--item-bg);
            width: 88vw;
            max-width: 64rem;
            height: fit-content;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            margin: auto;

            @media (max-width: 700px) {
                flex-direction: column;

                img {
                    height: 50vh;
                    object-fit: cover;
                }
            }

            img {
                border-radius: 0.75rem;
            }

            .details {
                display: flex;
                flex-direction: column;
                width: 100%;

                p {
                    text-align: justify;
                    flex-grow: 1;
                }

                .purchase {
                    display: flex;
                    justify-self: end;
                    gap: 1rem;
                    align-self: end;
                    align-items: center;
                    font-size: 1.5rem;

                    button {
                        cursor: pointer;
                        display: inline-flex;
                        justify-content: center;
                        align-items: center;
                    }

                    button[type="submit"] {
                        background: var(--gradient);
                        border: none;
                        color: var(--button-text);
                        padding: 0.5rem;
                        border-radius: 0.5rem;
                        transition: all 0.25s;

                        &:hover {
                            box-shadow: 0 0 1rem 0 var(--bg);
                        }
                    }

                    label {
                        font-size: 1rem;
                        cursor: text;
                    }

                    input {
                        border: 1px solid var(--variant);
                        border-radius: 0.5rem;
                        background-color: var(--bg);
                        padding: 0.5rem;
                        color: var(--text);
                        width: 4rem;
                        text-align: center;
                    }
                }
            }

            .close {
                position: absolute;
                right: 0.75rem;
                top: 0.75rem;
                background-color: var(--item-bg);
                fill: var(--text);
                border: none;
                cursor: pointer;
                border-bottom-left-radius: 0.5rem;

                svg {
                    height: 1.5rem;
                }
            }
        }
    }
</style>

<script>
    const response = await fetch("/OpenPhones-website/phones.json");
    const jsonLinks = await response.json();

    var store = document.getElementById("store");

    for (var link of jsonLinks) {
        var item = createItems();
        var popup = createPopups();

        store!.append(item);
        store!.append(popup);
    }

    function createItems() {
        var block = document.createElement("div");

        block.classList.add("store-item");
        block.innerHTML = `
        <img src=${link["images"][0]} />
        <h3>${link["short_name"]} (${link["quality"]})</h3>
        <b>${new Intl.NumberFormat("en-US", {
            style: "currency",
            currency: "USD",
        }).format(link["price"])}</b>
        <p>${link["description"]}</p>
        `;
        return block;
    }

    function createPopups() {
        var wrapper = document.createElement("div");
        wrapper.id = link["id"];
        wrapper.classList.add("wrapper");
        wrapper.innerHTML = `
    <div class="popup">
        <img src="${link["images"][0]}" alt="Random image" />
        <div class="details">
            <h2>${link["long_name"]}</h2>
            <b>${new Intl.NumberFormat("en-US", {
                style: "currency",
                currency: "USD",
            }).format(link["price"])}</b>
            <p>${link["description"]}</p>
            <div class="purchase">
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" value="1" min="1"/>
                <button type="submit">Add to cart</button>
            </div>
        </div>
        <button type="button" class="close" onclick="document.getElementById('${
            link["id"]
        }').style.display='none';">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 96 960 960"
                ><path
                    d="m249 849-42-42 231-231-231-231 42-42 231 231 231-231 42 42-231 231 231 231-42 42-231-231-231 231Z"
                ></path></svg
            ></button
        >
    </div>`;

        return wrapper;
    }

    const items = store!.querySelectorAll(".store-item");
    const wrappers = store!.querySelectorAll(".wrapper");

    items.forEach((item, index) => {
        item.addEventListener("click", () => {
            const wrapper = wrappers[index] as HTMLElement;
            wrapper.style.display = "block";
        });
    });
</script>
